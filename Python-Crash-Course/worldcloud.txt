Software-defined networking (SDN) technology is an approach to network management that enables dynamic, programmatically efficient network configuration in order to improve network performance and monitoring, making it more like cloud computing than traditional network management.[1] SDN is meant to address the fact that the static architecture of traditional networks is decentralized and complex while current networks require more flexibility and easy troubleshooting. SDN attempts to centralize network intelligence in one network component by disassociating the forwarding process of network packets (data plane) from the routing process (control plane). The control plane consists of one or more controllers, which are considered the brain of the SDN network where the whole intelligence is incorporated. However, the intelligent centralization has its own drawbacks when it comes to security,[1] scalability and elasticity[1] and this is the main issue of SDN.
SDN was commonly associated with the OpenFlow protocol (for remote communication with network plane elements for the purpose of determining the path of network packets across network switches) since the latter's emergence in 2011. However, since 2012[2][3] OpenFlow for many companies is no longer an exclusive solution, they added proprietary techniques. These include Cisco Systems' Open Network Environment and Nicira's network virtualization platform.
SD-WAN applies similar technology to a wide area network (WAN).
SDN technology is currently available for industrial control applications that require extremely fast failover. One company boasts 100x Faster Failover for Mission-critical processes (fails over in less than 100 Î¼s, compared to 10 ms for traditional networks) along with the elimination of certain Cyber Vulnerabilities that are associated with traditional network management switches.

This is my private repository for Master Degree in Computer Technology @ University of Computer Studies, Mandalay (UCSM).

My research concentrates on hybrid NIPS on Software-Defined Networking architecture, and used both signature-based and anomaly-based methods to protect the entire network. Ryu is used as the centralized SDN controller. Mininet is used for the emulated SDN Network. Snort is used as signature-based NIPS on SDN for packet-based detection and Artificial Neural Network in used for anomaly-based detection of the flow table entries. Python is used for my entire system.

If you interest in my research or want to ask more details, you can contact me for more information. email: